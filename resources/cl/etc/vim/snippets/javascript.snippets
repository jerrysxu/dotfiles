# Prototype
snippet proto
	${1:class_name}.prototype.${2:method_name} =
	function(${3:first_argument}) {
		${4:// body...}
	};
# Function
snippet fun
	function ${1:function_name} (${2:argument}) {
		${3:// body...}
	}
# Anonymous Function
snippet f
	function(${1}) {${2}};
snippet fp
	${1:method_name}: function(${2}){
		var that = this;

		${3}
	}${4:,}
# if
snippet if
	if (${1:true}){
		${2}
	}
# if ... else
snippet ife
	if (${1:true}){
		${2}
	} else {
		${3}
	};
# tertiary conditional
snippet t
	${1:/* condition */} ? ${2:a} : ${3:b}
# switch
snippet switch
	switch(${1:expression}) {
		case '${3:case}':
			${4:// code}
			break;
		${5}
		default:
			${2:// code}
	}
# case
snippet case
	case '${1:case}':
		${2:// code}
		break;
	${3}
# for (...) {...}
snippet for
	for (var ${2:i} = 0; $2 < ${1:Things}.length; $2${3:++}) {
		${4:$1[$2]}
	};
# for (...) {...} (Improved Native For-Loop)
snippet forr
	for (var ${2:i} = ${1:Things}.length - 1; $2 >= 0; $2${3:--}) {
		${4:$1[$2]}
	};
# while (...) {...}
snippet wh
	while (${1:/* condition */}) {
		${2:/* code */}
	}
# do...while
snippet do
	do {
		${2:/* code */}
	} while (${1:/* condition */});
# setTimeout function
snippet timeout
	setTimeout(function() {${3}}${2}, ${1:10};
# Get Elements
snippet $
	$("${1:dom_id}")${2}
snippet $t
	$(this)${1}
snippet observe
	.observe('${1:click}', function(event){ 
		${2}
	});
snippet page
	$(document).ready(function() { app.${1:your}_page.init(); });

	app.$1_page = {
		init: function(){
			${2}
		}
	};
snippet event
	$("${1}").${2:click}(function(${3}){
		${4};
	});
snippet ret 
	return ${1};
